# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        arch: [ "arm64", "arm", "x64" ] # x86
      fail-fast: false

    name: "Build for Android ${{matrix.arch}}"
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Get SwiftShader
        uses: actions/checkout@v2
        with:
          path: 'swiftshader'

      - name: Build SwiftShader
        shell: bash
        run: |
          export PATH=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/:$PATH
          git -C SwiftShader submodule init
          git -C SwiftShader config submodule."third_party/cppdap".url "$srcdir/cppdap"
          git -C SwiftShader config submodule."third_party/googletest".url "$srcdir/googletest"
          git -C SwiftShader config submodule."third_party/json".url "$srcdir/json"
          git -C SwiftShader config submodule."third_party/libbacktrace/src".url "$srcdir/libbacktrace"
          git -C SwiftShader config submodule."third_party/PowerVR_Examples".url "$srcdir/Native_SDK"
          git -C SwiftShader config submodule."third_party/benchmark".url "$srcdir/benchmark"
          git -C SwiftShader config submodule."third_party/glslang".url "$srcdir/glslang"
          # this repo is not publicly accessible so we won't fetch it
          git -C SwiftShader config submodule."third_party/git-hooks".update none
          git -C SwiftShader config submodule."third_party/llvm-project".update none
          git -C SwiftShader -c protocol.file.allow=always submodule update

          cmake \
            -G Ninja \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DCMAKE_BUILD_TYPE=Release \
            -D SWIFTSHADER_WARNINGS_AS_ERRORS=off \
            -S SwiftShader -B build

          ninja -C build
          mkdir /tmp/swiftshader
          mv build/libvk_swiftshader.so /tmp/swiftshader

      - name: Upload libraries
        uses: actions/upload-artifact@v2
        with:
          name: swiftshader_${{matrix.arch}}
          path: /tmp/swiftshader